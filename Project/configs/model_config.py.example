import os

# If the name of the model directory is the same as the key or value in MODEL_PATH, the program will automatically detect the load without modifying the path in MODEL_PATH.
MODEL_ROOT_PATH = ""

# Selected Embedding name
EMBEDDING_MODEL = "bge-large-zh-v1.5"

# "CUDA", "MPS", "CPU", "XPU".
EMBEDDING_DEVICE = "auto"

# The Reranker model selected
RERANKER_MODEL = "bge-reranker-large"
# Whether to enable the ReRanker model
USE_RERANKER = False
RERANKER_MAX_LENGTH = 1024

# Configure if you need to add custom keywords to the EMBEDDING_MODEL
EMBEDDING_KEYWORD_FILE = "keywords.txt"
EMBEDDING_MODEL_OUTPUT_PATH = "output"

LLM_MODELS = ["chatglm3-6b", "zhipu-api", "openai-api"]
Agent_MODEL = None

#"CUDA", "MPS", "CPU", "XPU".
LLM_DEVICE = "auto"

HISTORY_LEN = 3
MAX_TOKENS = 2048
TEMPERATURE = 0.7
ONLINE_LLM_MODEL = {
    "openai-api": {
        "model_name": "gpt-4",
        "api_base_url": "https://api.openai.com/v1",
        "api_key": "",
        "openai_proxy": "",
    },

    # Azure API
    "azure-api": {
        "deployment_name": "", # The name of the deployment container
        "resource_name": "", # https://{resource_name}.openai.azure.com/openai/ fill in the resource_name part, leave the other parts blank
        "api_version": "", # The version of the API, not the model version
        "api_key": "",
        "provider": "AzureWorker",
    },

    # Claude API : https://www.anthropic.com/api
    # Available models: 
    # Claude 3 Opus:    claude-3-opus-20240229 
    # Claude 3 Sonnet	claude-3-sonnet-20240229
    # Claude 3 Haiku	claude-3-haiku-20240307
    "claude-api": {
        "api_key": "",
        "version": "2023-06-01",
        "model_name":"claude-3-opus-20240229", 
        "provider": "ClaudeWorker",
    }

}

MODEL_PATH = {
    "embed_model": {
        "text2vec-multilingual": "shibing624/text2vec-base-multilingual",
        "bge-small-zh": "BAAI/bge-small-zh",
        "bge-base-zh": "BAAI/bge-base-zh",
        "bge-large-zh": "BAAI/bge-large-zh",
        "bge-m3": "BAAI/bge-m3",
    },

    "llm_model": {
        "chatglm2-6b": "THUDM/chatglm2-6b",
        "chatglm2-6b-32k": "THUDM/chatglm2-6b-32k",
        "chatglm3-6b": "THUDM/chatglm3-6b",
        "chatglm3-6b-32k": "THUDM/chatglm3-6b-32k",

        "Orion-14B-Chat": "OrionStarAI/Orion-14B-Chat",
        "Orion-14B-Chat-Plugin": "OrionStarAI/Orion-14B-Chat-Plugin",
        "Orion-14B-LongChat": "OrionStarAI/Orion-14B-LongChat",

        "Llama-2-7b-chat-hf": "meta-llama/Llama-2-7b-chat-hf",
        "Llama-2-13b-chat-hf": "meta-llama/Llama-2-13b-chat-hf",
        "Llama-2-70b-chat-hf": "meta-llama/Llama-2-70b-chat-hf",

        "Qwen-1_8B-Chat": "Qwen/Qwen-1_8B-Chat",
        "Qwen-7B-Chat": "Qwen/Qwen-7B-Chat",
        "Qwen-14B-Chat": "Qwen/Qwen-14B-Chat",
        "Qwen-72B-Chat": "Qwen/Qwen-72B-Chat",

        "open_llama_13b": "openlm-research/open_llama_13b",
        "vicuna-13b-v1.5": "lmsys/vicuna-13b-v1.5",
        "koala": "young-geng/koala",
        "mpt-7b": "mosaicml/mpt-7b",
        "mpt-7b-storywriter": "mosaicml/mpt-7b-storywriter",
        "mpt-30b": "mosaicml/mpt-30b",
        "opt-66b": "facebook/opt-66b",
        "opt-iml-max-30b": "facebook/opt-iml-max-30b",
        "gpt2": "gpt2",
        "gpt2-xl": "gpt2-xl",
        "gpt-j-6b": "EleutherAI/gpt-j-6b",
        "gpt4all-j": "nomic-ai/gpt4all-j",
        "gpt-neox-20b": "EleutherAI/gpt-neox-20b",
        "pythia-12b": "EleutherAI/pythia-12b",
        "oasst-sft-4-pythia-12b-epoch-3.5": "OpenAssistant/oasst-sft-4-pythia-12b-epoch-3.5",
        "dolly-v2-12b": "databricks/dolly-v2-12b",
        "stablelm-tuned-alpha-7b": "stabilityai/stablelm-tuned-alpha-7b",
    },

    "reranker": {
        "bge-reranker-large": "BAAI/bge-reranker-large",
        "bge-reranker-base": "BAAI/bge-reranker-base",
    }
}
NLTK_DATA_PATH = os.path.join(os.path.dirname(os.path.dirname(__file__)), "nltk_data")

VLLM_MODEL_DICT = {
    "chatglm2-6b": "THUDM/chatglm2-6b",
    "chatglm2-6b-32k": "THUDM/chatglm2-6b-32k",
    "chatglm3-6b": "THUDM/chatglm3-6b",
    "chatglm3-6b-32k": "THUDM/chatglm3-6b-32k",

    "Llama-2-7b-chat-hf": "meta-llama/Llama-2-7b-chat-hf",
    "Llama-2-13b-chat-hf": "meta-llama/Llama-2-13b-chat-hf",
    "Llama-2-70b-chat-hf": "meta-llama/Llama-2-70b-chat-hf",

    "gpt2": "gpt2",
    "gpt2-xl": "gpt2-xl",
    "gpt-j-6b": "EleutherAI/gpt-j-6b",

}

SUPPORT_AGENT_MODEL = [
    "openai-api", # GPT4 model
    "qwen-api", # Qwen Max model
    "zhipu-api", # Zhipu AI GLM4 model
    "Qwen", # All Qwen series local models
    "chatglm3-6b",
    "internlm2-chat-20b",
    "Orion-14B-Chat-Plugin",
]
